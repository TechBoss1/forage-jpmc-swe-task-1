From 1f8535569214536102fe749e57174c4e0d2918fc Mon Sep 17 00:00:00 2001
From: Benjamin Airabor-Ohunyon <gleekia13@gmail.com>
Date: Sat, 24 Aug 2024 16:17:01 +0100
Subject: [PATCH] Fixed price computation and ratio calculation in client3.py

---
 client3.py | 21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..93f4e78 100644
--- a/client3.py
+++ b/client3.py
@@ -35,25 +35,36 @@ def getDataPoint(quote):
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2  # Updated price calculation
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
-    """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        return float('inf')  # Return infinity if price_b is zero to avoid division by zero
+    return price_a / price_b
 
 
 # Main
 if __name__ == "__main__":
+    # Initialize prices dictionary to store prices for each stock
+    prices = {}
+
     # Query the price once every N seconds.
     for _ in iter(range(N)):
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
-        """ ----------- Update to get the ratio --------------- """
+        # Iterate over each quote to process and store data points
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price  # Store the price in the dictionary
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
+        # Compute and print the ratio between two specific stocks, e.g., 'stock_a' and 'stock_b'
+        if 'stock_a' in prices and 'stock_b' in prices:
+            ratio = getRatio(prices['stock_a'], prices['stock_b'])
+            print("Ratio %s" % ratio)
+        else:
+            print("Not enough data to compute ratio")
+
-- 
2.46.0.windows.1

